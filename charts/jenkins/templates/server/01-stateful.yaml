apiVersion: v1
kind: Service
metadata:
  name: {{ .Chart.Name }}-server
spec:
  clusterIP: None
  selector:
    app.kubernetes.io/component: server
    app.kubernetes.io/part-of: {{ .Chart.Name }}
  ports:
  - name: server
    port: {{ .Values.server.network.port }}
    targetPort: {{ .Values.server.network.targetPort }}
    protocol: {{ .Values.server.network.protocol }}
  - name: agent
    port: {{ .Values.server.network.agentPort }}
    targetPort: {{ .Values.server.network.agentTargetPort }}
    protocol: {{ .Values.server.network.protocol }}
---
apiVersion: v1
kind: Service
metadata:
  name: {{ .Chart.Name }}-server-cluster
  annotations:
    prometheus.io/scrape: "true"
    prometheus.io/path: /
    prometheus.io/port: {{ .Values.server.network.port | quote }}
spec:
  type: ClusterIP
  selector:
    app.kubernetes.io/component: server
    app.kubernetes.io/part-of: {{ .Chart.Name }}
  ports:
  - name: server
    port: {{ .Values.server.network.port }}
    targetPort: {{ .Values.server.network.targetPort }}
    protocol: {{ .Values.server.network.protocol }}
  - name: agent
    port: {{ .Values.server.network.agentPort }}
    targetPort: {{ .Values.server.network.agentTargetPort }}
    protocol: {{ .Values.server.network.protocol }}
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{ .Chart.Name }}-server
  labels:
    app.kubernetes.io/component: server
    app.kubernetes.io/part-of: {{ .Chart.Name }}
spec:
  selector:
    matchLabels:
      app.kubernetes.io/component: server
      app.kubernetes.io/part-of: {{ .Chart.Name }}
  serviceName: {{ .Chart.Name }}-server
  replicas: {{ .Values.server.replicas | default 1 }}
  template:
    metadata:
      labels:
        app.kubernetes.io/component: server
        app.kubernetes.io/part-of: {{ .Chart.Name }}
    spec:
      terminationGracePeriodSeconds: {{ .Values.common.graceperiod | default 60 }}
      securityContext:
        fsGroup: 1000
        runAsUser: 1000
      serviceAccountName: jenkins
      containers:
      - name: {{ .Chart.Name }}
        image: "{{ .Values.common.containerRegistry }}/{{ .Values.server.image }}:{{ .Chart.AppVersion }}"
        ports:
        - containerPort: {{ .Values.server.network.targetPort }}
          protocol: {{ .Values.server.network.protocol }}
        - containerPort: {{ .Values.server.network.agentTargetPort }}
          protocol: {{ .Values.server.network.protocol }}
        volumeMounts:
        - name: {{ .Chart.Name }}-data
          mountPath: {{ .Values.server.config.mountPath }}
        resources:
          requests:
            cpu: {{ .Values.server.requests.cpu | default "250m" | quote }}
            memory: {{ .Values.server.requests.memory | default "256Mi" | quote }}
          limits:
            cpu: {{ .Values.server.limits.cpu | default "500m" | quote }}
            memory: {{ .Values.server.limits.memory | default "512Mi" | quote }}
        livenessProbe:
          httpGet:
            path: {{ .Values.server.liveness.path }}
            port: {{ .Values.server.liveness.port }}
          initialDelaySeconds: {{ .Values.server.liveness.probeIds }}
          periodSeconds: {{ .Values.server.liveness.probePs }}
          timeoutSeconds: {{ .Values.server.liveness.probeTs }}
          failureThreshold: {{ .Values.server.liveness.probeFt }}
        readinessProbe:
          httpGet:
            path: {{ .Values.server.readiness.path }}
            port: {{ .Values.server.readiness.port }}
          initialDelaySeconds: {{ .Values.server.readiness.probeIds }}
          periodSeconds: {{ .Values.server.readiness.probePs }}
          timeoutSeconds: {{ .Values.server.readiness.probeTs }}
          failureThreshold: {{ .Values.server.readiness.probeFt }}
        imagePullPolicy: {{ .Values.common.imagePullPolicy }}
  volumeClaimTemplates:
  - metadata:
      name: {{ .Chart.Name }}-data
    spec:
      accessModes: [ "ReadWriteOnce" ]
      resources:
        requests:
          storage: {{ .Values.server.config.storageSize | quote }}